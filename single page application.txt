<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Task Manager SPA</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      background-color: #f4f4f4;
    }
    header {
      background-color: #2c3e50;
      color: white;
      padding: 15px;
      text-align: center;
    }
    nav {
      background-color: #34495e;
      display: flex;
      justify-content: center;
      padding: 10px;
    }
    nav a {
      color: white;
      margin: 0 15px;
      text-decoration: none;
      font-weight: bold;
      cursor: pointer;
    }
    nav a.active {
      border-bottom: 2px solid #1abc9c;
    }
    main {
      padding: 20px;
      min-height: 70vh;
    }
    .task {
      background: white;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 4px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .task.completed {
      text-decoration: line-through;
      background-color: #e0f7e9;
      color: #555;
    }
    button {
      background-color: #1abc9c;
      color: white;
      border: none;
      padding: 8px 12px;
      border-radius: 4px;
      cursor: pointer;
      margin-left: 5px;
    }
    button:hover {
      background-color: #149174;
    }
    form input, form textarea {
      display: block;
      width: 100%;
      margin-bottom: 10px;
      padding: 8px;
      font-size: 1rem;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
    }
    footer {
      text-align: center;
      padding: 15px;
      background: #2c3e50;
      color: white;
      position: fixed;
      bottom: 0;
      width: 100%;
    }
    @media (max-width: 600px) {
      nav {
        flex-direction: column;
      }
      nav a {
        padding: 5px;
        margin: 5px 0;
      }
    }
  </style>
</head>
<body>
  <header>
    <h1>Task Manager SPA</h1>
  </header>
  <nav>
    <a href="#dashboard" id="nav-dashboard" class="active">Dashboard</a>
    <a href="#tasks" id="nav-tasks">Tasks</a>
    <a href="#add" id="nav-add">Add Task</a>
  </nav>
  <main id="content"></main>
  <footer>Â© 2025 TaskManager App</footer>

  <script>
    let tasks = [
      { id: 1, title: "Complete project report", description: "Finish SPA project exam phase 1", completed: false },
      { id: 2, title: "Submit documentation", description: "Prepare submission folder", completed: true }
    ];

    function saveTasks() {
      // Optional: Save tasks to localStorage if you want persistence
      localStorage.setItem('tasks', JSON.stringify(tasks));
    }

    function loadTasks() {
      const saved = localStorage.getItem('tasks');
      if (saved) {
        tasks = JSON.parse(saved);
      }
    }

    function loadView() {
      const route = window.location.hash || "#dashboard";

      // Update nav active class
      document.querySelectorAll("nav a").forEach(a => a.classList.remove("active"));
      document.querySelector(`#nav-${route.substring(1)}`)?.classList.add("active");

      const content = document.getElementById("content");
      content.innerHTML = "";

      if (route === "#dashboard") {
        const total = tasks.length;
        const done = tasks.filter(t => t.completed).length;
        content.innerHTML = `
          <h2>Dashboard</h2>
          <p>Total Tasks: ${total}</p>
          <p>Completed: ${done}</p>
          <p>Pending: ${total - done}</p>
        `;
      } else if (route === "#tasks") {
        content.innerHTML = "<h2>Tasks</h2>";
        if (tasks.length === 0) {
          content.innerHTML += "<p>No tasks available.</p>";
        } else {
          tasks.forEach(task => {
            const div = document.createElement("div");
            div.className = "task" + (task.completed ? " completed" : "");
            div.innerHTML = `
              <div>
                <strong>${task.title}</strong><br>
                <small>${task.description}</small>
              </div>
              <div>
                <button onclick="toggleComplete(${task.id})">${task.completed ? "Undo" : "Done"}</button>
                <button onclick="deleteTask(${task.id})">Delete</button>
              </div>`;
            content.appendChild(div);
          });
        }
      } else if (route === "#add") {
        content.innerHTML = `
          <h2>Add Task</h2>
          <form id="addTaskForm">
            <input type="text" id="title" placeholder="Task Title" required />
            <textarea id="description" placeholder="Task Description" rows="4" required></textarea>
            <button type="submit">Add Task</button>
          </form>
        `;

        document.getElementById("addTaskForm").addEventListener("submit", function(e) {
          e.preventDefault();
          addTask();
        });
      } else {
        content.innerHTML = "<h2>Page Not Found</h2>";
      }
    }

    function toggleComplete(id) {
      const task = tasks.find(t => t.id === id);
      if (task) {
        task.completed = !task.completed;
        saveTasks();
        loadView();
      }
    }

    function deleteTask(id) {
      tasks = tasks.filter(t => t.id !== id);
      saveTasks();
      loadView();
    }

    function addTask() {
      const titleInput = document.getElementById("title");
      const descInput = document.getElementById("description");
      const title = titleInput.value.trim();
      const description = descInput.value.trim();

      if (!title || !description) {
        alert("Please enter both title and description.");
        return;
      }

      const newTask = {
        id: tasks.length > 0 ? Math.max(...tasks.map(t => t.id)) + 1 : 1,
        title,
        description,
        completed: false
      };
      tasks.push(newTask);
      saveTasks();

      // Reset form and navigate to tasks
      titleInput.value = "";
      descInput.value = "";
      window.location.hash = "#tasks";
    }

    window.addEventListener("hashchange", loadView);

    // Load from localStorage and initialize
    loadTasks();
    loadView();
  </script>
</body>
</html>
